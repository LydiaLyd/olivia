//- items - array
//- +nav([{text: "", href: "", current: true}, {text: "", href: ""}, {text: "", href: ""}])
mixin nav(items)
  ul.nav
    each item in items
      if item.current
        li.nav__item
          a.nav__link.nav__link--current(href=item.href)= item.text
            span.nav__text-hidden Current
      else
        li.nav__item
          a.nav__link(href=item.href)= item.text


//- modifier - string
//- +icon("modifier")
mixin icon(modifier)
  i(class="icon icon--" + modifier)
  
  
//- items - array, modifier - string
//- +socials([{icon: "", href: "", hint: ""}, {icon: "", href: "", hint: ""}, {icon: "", href: "", hint: ""}], "")
mixin socials(items, modifier)
  if modifier
    ul(class="socials socials--" + modifier)
      each item in items
        li(class="socials__item socials__item--" + modifier)
          a(class="socials__link socials__link--" + modifier href=item.href title=item.hint target="_blank")
            +icon(item.icon)
            span.socials__text-hidden= item.hint
  else  
    ul.socials
      each item in items
        li.socials__item
          a.socials__link(href=item.href title=item.hint target="_blank")
            +icon(item.icon)
            span.socials__text-hidden= item.hint


//- +slider()>block
mixin slider(modifier)
  div(class="slider slider--" + modifier)
    if block
      block


//- imgSrc - string
//- +screenshot(imgSrc)
mixin screenshot(imgSrc)
  .screenshot
    img.screenshot__img(src=imgSrc width="264" height="467" alt="Screenshot")
    .screenshot__overlay
      a.btn.btn--screenshot(href="#" title="Go to link") Go to link


//- content - object
//- +testimonial({text: "", author: ["", ""], occupation: "", imgSrc: ""})
mixin testimonial(content)
  blockquote.testimonial
    p.testimonial__text= content.text
    .testimonial__author #[= content.author[0]] #[span.testimonial__emphasis= content.author[1]]
    .testimonial__occupation= content.occupation
    .testimonial__wrap
      img.testimonial__photo(src=content.imgSrc width="199" height="199" alt="Photo")


//- content - object
//- +assistant({name: ["", ""], occupation: "", imgSrc: ""})
mixin assistant(content)
  li.assistant
    .assistant__name #[= content.name[0]] #[span.assistant__lastname= content.name[1]]
    .assistant__occupation= content.occupation
    p.assistant__descr Continually coordinate leveraged functional value. Holisticly target stand-alone action items with ethical
    if block
      block
    .assistant__wrap
      img.assistant__img(src=content.imgSrc width="168" height="168" alt="Photo")


//- content - object
//- +post-preview({heading: "", lead: "", date: "", day: "", monthAndYear: ""})
mixin post-preview(content)
  article.post-preview
    h2.post-preview__heading: a.post-preview__heading-link(href="#")= content.heading
    p.post-preview__lead= content.lead
    a.post-preview__link(href="#")
      +icon("globe")
      | http://srowar.com/lowerbacklink
    +pubdate(content.date, content.day, content.monthAndYear)

mixin pubdate(date, day, monthAndYear)
  .pubdate
    time(datetime=date) #[span.pubdate__day= day] #[= monthAndYear]
